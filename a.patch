diff --git a/README.md b/README.md
index 65b56ae..437afc2 100644
--- a/README.md
+++ b/README.md
@@ -37,7 +37,7 @@ https://github.com/Kong/kong-madr/pull/28
 ```
 http {
     init_worker_by_lua_block {
-        local timer_module = require("resty.timer-ng")
+        local timer_module = require("resty.timer")
 
         local options = {}
         local timer_sys = timer_module.new(options)
@@ -130,14 +130,14 @@ Versioning is strictly based on [Semantic Versioning](https://semver.org/)
 
 ### new
 
-**syntax**: *timer, err = require("resty.timer-ng").new(options?)*
+**syntax**: *timer, err = require("resty.timer").new(options?)*
 
 **context**: *init_by_lua\*, init_worker_by_lua\*, set_by_lua\*, rewrite_by_lua\*, access_by_lua\*, content_by_lua\*, header_filter_by_lua\*, body_filter_by_lua\*, log_by_lua\*, ngx.timer.\**
 
 For example
 
 ```lua
-local timer_module = require("resty.timer-ng")
+local timer_module = require("resty.timer")
 local timer_sys = timer_module.new({
     -- debug mode
     debug = false,
diff --git a/lib/resty/timer-ng/array.lua b/lib/resty/timer/array.lua
similarity index 97%
rename from lib/resty/timer-ng/array.lua
rename to lib/resty/timer/array.lua
index 3dcabe7..a1e3a12 100644
--- a/lib/resty/timer-ng/array.lua
+++ b/lib/resty/timer/array.lua
@@ -1,4 +1,4 @@
-local utils = require("resty.timer-ng.utils")
+local utils = require("resty.timer.utils")
 
 local utils_table_new = utils.table_new
 local utils_table_clear = utils.table_clear
diff --git a/lib/resty/timer-ng/constants.lua b/lib/resty/timer/constants.lua
similarity index 100%
rename from lib/resty/timer-ng/constants.lua
rename to lib/resty/timer/constants.lua
diff --git a/lib/resty/timer-ng/init.lua b/lib/resty/timer/init.lua
similarity index 96%
rename from lib/resty/timer-ng/init.lua
rename to lib/resty/timer/init.lua
index baeff32..3b29c19 100644
--- a/lib/resty/timer-ng/init.lua
+++ b/lib/resty/timer/init.lua
@@ -1,9 +1,9 @@
 local lrucache = require("resty.lrucache")
-local job_module = require("resty.timer-ng.job")
-local utils = require("resty.timer-ng.utils")
-local wheel_group = require("resty.timer-ng.wheel.group")
-local constants = require("resty.timer-ng.constants")
-local thread_group = require("resty.timer-ng.thread.group")
+local job_module = require("resty.timer.job")
+local utils = require("resty.timer.utils")
+local wheel_group = require("resty.timer.wheel.group")
+local constants = require("resty.timer.constants")
+local thread_group = require("resty.timer.thread.group")
 
 local ngx_log = ngx.log
 local ngx_NOTICE = ngx.NOTICE
@@ -390,7 +390,7 @@ function _M:named_at(name, delay, callback, ...)
     if delay >= self.max_expire
         or (delay ~= 0 and delay < self.opt.resolution)
     then
-        ngx_log(ngx_NOTICE, "[timer-ng] fallback to ngx.timer.at [delay = ",
+        ngx_log(ngx_NOTICE, "[timer] fallback to ngx.timer.at [delay = ",
                 delay, "]")
         return ngx_timer_at(delay, callback, ...)
     end
@@ -412,10 +412,8 @@ function _M:named_every(name, interval, callback, ...)
 
     if interval >= self.max_expire
         or interval < self.opt.resolution then
-        ngx_log(ngx_NOTICE,
-                "[timer-ng] fallback to ngx.timer.every [interval = ",
-                interval,
-                "]")
+        ngx_log(ngx_NOTICE, "[timer] fallback to ngx.timer.every [interval = ",
+                interval, "]")
         return ngx_timer_every(interval, callback, ...)
     end
 
diff --git a/lib/resty/timer-ng/job.lua b/lib/resty/timer/job.lua
similarity index 97%
rename from lib/resty/timer-ng/job.lua
rename to lib/resty/timer/job.lua
index 6a276c1..93c861a 100644
--- a/lib/resty/timer-ng/job.lua
+++ b/lib/resty/timer/job.lua
@@ -1,4 +1,4 @@
-local utils = require("resty.timer-ng.utils")
+local utils = require("resty.timer.utils")
 
 local ngx_log = ngx.log
 local ngx_ERR = ngx.ERR
@@ -281,11 +281,7 @@ function _M:execute()
 
     else
         stats.last_err_msg = err
-        ngx_log(ngx_ERR,
-                "[timer-ng] failed to run timer ",
-                self.name,
-                ": ",
-                err)
+        ngx_log(ngx_ERR, "[timer] failed to run timer ", self.name, ": ", err)
     end
 
     self._running = false
diff --git a/lib/resty/timer-ng/thread/group.lua b/lib/resty/timer/thread/group.lua
similarity index 91%
rename from lib/resty/timer-ng/thread/group.lua
rename to lib/resty/timer/thread/group.lua
index 5501972..5c46ead 100644
--- a/lib/resty/timer-ng/thread/group.lua
+++ b/lib/resty/timer/thread/group.lua
@@ -1,5 +1,5 @@
-local super_thread_module = require("resty.timer-ng.thread.super")
-local worker_thread_module = require("resty.timer-ng.thread.worker")
+local super_thread_module = require("resty.timer.thread.super")
+local worker_thread_module = require("resty.timer.thread.worker")
 
 local setmetatable = setmetatable
 
diff --git a/lib/resty/timer-ng/thread/loop.lua b/lib/resty/timer/thread/loop.lua
similarity index 89%
rename from lib/resty/timer-ng/thread/loop.lua
rename to lib/resty/timer/thread/loop.lua
index ca0fd60..bb64873 100644
--- a/lib/resty/timer-ng/thread/loop.lua
+++ b/lib/resty/timer/thread/loop.lua
@@ -83,22 +83,21 @@ local PAHSE_HANDLERS = {
 local function make_log_msg(self, phase, action, msg)
     if action == ACTION_EXIT then
         return string_format(
-            "[timer-ng] thread %s will exits after the %s phase was executed",
+            "[timer] thread %s will exits after the %s phase was executed",
             self.name,
             phase
         )
 
     elseif action == ACTION_ERROR or action == ACTION_EXIT_WITH_MSG then
         return string_format(
-            "[timer-ng] thread %s will exits after "
-            .. "the %s phase was executed: %s",
+            "[timer] thread %s will exits after the %s phase was executed: %s",
             self.name,
             phase,
             msg
         )
 
     else
-        error("[timer-ng] unexpected error")
+        error("[timer] unexpected error")
     end
 end
 
@@ -144,7 +143,7 @@ local function phase_handler_wrapper(self, phase)
         assert(err ~= nil)
         return ACTION_ERROR, err
     else
-        error("[timer-ng] unexpected error")
+        error("[timer] unexpected error")
     end
 end
 
@@ -172,7 +171,7 @@ local function do_phase_handler(self, phase)
         return true
 
     else
-        error("[timer-ng] unexpected error")
+        error("[timer] unexpected error")
     end
 end
 
@@ -182,7 +181,7 @@ local function loop_wrapper(premature, self)
         return
     end
 
-    ngx_log(ngx_NOTICE, "[timer-ng] thread ", self.name, " has been started")
+    ngx_log(ngx_NOTICE, "[timer] thread ", self.name, " has been started")
 
     if not do_phase_handler(self, "init") then
         while not ngx_worker_exiting() and not self._kill do
@@ -197,7 +196,7 @@ local function loop_wrapper(premature, self)
 
     do_phase_handler(self, "finally")
 
-    ngx_log(ngx_NOTICE, "[timer-ng] thread ", self.name, " has been exited")
+    ngx_log(ngx_NOTICE, "[timer] thread ", self.name, " has been exited")
 end
 
 
@@ -206,13 +205,12 @@ function _M:spawn()
     local ok, err = ngx_timer_at(0, loop_wrapper, self)
 
     if not ok then
-        ngx_log(ngx_EMERG,
-                "[timer-ng] failed to spawn thread ", self.name, ": ",
+        ngx_log(ngx_EMERG, "[timer] failed to spawn thread ", self.name, ": ",
                 err)
         return false, err
     end
 
-    ngx_log(ngx_NOTICE, "[timer-ng] thread ", self.name, " has been spawned")
+    ngx_log(ngx_NOTICE, "[timer] thread ", self.name, " has been spawned")
     return true, nil
 end
 
diff --git a/lib/resty/timer-ng/thread/super.lua b/lib/resty/timer/thread/super.lua
similarity index 93%
rename from lib/resty/timer-ng/thread/super.lua
rename to lib/resty/timer/thread/super.lua
index 1c33549..8b8f3d0 100644
--- a/lib/resty/timer-ng/thread/super.lua
+++ b/lib/resty/timer/thread/super.lua
@@ -1,5 +1,5 @@
 local semaphore = require("ngx.semaphore")
-local loop = require("resty.timer-ng.thread.loop")
+local loop = require("resty.timer.thread.loop")
 
 local ngx_log = ngx.log
 local ngx_INFO = ngx.INFO
@@ -15,9 +15,9 @@ local math_max = math.max
 local math_min = math.min
 
 local CONSTANTS_SCALING_RECORD_INTERVAL =
-    require("resty.timer-ng.constants").SCALING_RECORD_INTERVAL
+    require("resty.timer.constants").SCALING_RECORD_INTERVAL
 local CONSTANTS_TOLERANCE_OF_GRACEFUL_SHUTDOWN =
-    require("resty.timer-ng.constants").TOLERANCE_OF_GRACEFUL_SHUTDOWN
+    require("resty.timer.constants").TOLERANCE_OF_GRACEFUL_SHUTDOWN
 
 local setmetatable = setmetatable
 
@@ -86,7 +86,7 @@ local function scaling_execute(self, context)
         end
 
         if delta_thread_count_or_err <= 0 then
-            ngx.log(ngx_WARN, "[timer-ng] overload: ", load_avg)
+            ngx.log(ngx_WARN, "[timer] overload: ", load_avg)
         end
 
         return true, nil
@@ -153,7 +153,7 @@ local function thread_after(context, self)
     local ok, err = self.wake_up_semaphore:wait(delay)
 
     if not ok and err ~= "timeout" then
-        ngx_log(ngx_ERR, "[timer-ng] failed to wait semaphore: ", err)
+        ngx_log(ngx_ERR, "[timer] failed to wait semaphore: ", err)
     end
 
     return loop.ACTION_CONTINUE
diff --git a/lib/resty/timer-ng/thread/worker.lua b/lib/resty/timer/thread/worker.lua
similarity index 92%
rename from lib/resty/timer-ng/thread/worker.lua
rename to lib/resty/timer/thread/worker.lua
index 6000909..e126c4b 100644
--- a/lib/resty/timer-ng/thread/worker.lua
+++ b/lib/resty/timer/thread/worker.lua
@@ -1,5 +1,5 @@
 local semaphore = require("ngx.semaphore")
-local loop = require("resty.timer-ng.thread.loop")
+local loop = require("resty.timer.thread.loop")
 
 local ngx_log = ngx.log
 local ngx_NOTICE = ngx.NOTICE
@@ -19,7 +19,7 @@ local string_format = string.format
 local setmetatable = setmetatable
 
 local CONSTANTS_TOLERANCE_OF_GRACEFUL_SHUTDOWN =
-    require("resty.timer-ng.constants").TOLERANCE_OF_GRACEFUL_SHUTDOWN
+    require("resty.timer.constants").TOLERANCE_OF_GRACEFUL_SHUTDOWN
 
 local _M = {}
 
@@ -71,7 +71,7 @@ local function report_after_job_execute(self, job)
     local stat = debug_stats:get(callstack)
 
     if not stat then
-        ngx_log(ngx_NOTICE, "[timer-ng] lost stats key: ", callstack)
+        ngx_log(ngx_NOTICE, "[timer] lost stats key: ", callstack)
         return
     end
 
@@ -85,10 +85,10 @@ local function report_alive(self, thread)
     self.alive_threads[thread.name] = thread
     self.alive_threads_count = self.alive_threads_count + 1
 
-    ngx_log(ngx_NOTICE, "[timer-ng] thread ", thread.name, " is alive")
-    ngx_log(ngx_NOTICE, "[timer-ng] spawned worker threads: ",
+    ngx_log(ngx_NOTICE, "[timer] thread ", thread.name, " is alive")
+    ngx_log(ngx_NOTICE, "[timer] spawned worker threads: ",
             self.spawned_threads_count)
-    ngx_log(ngx_NOTICE, "[timer-ng] alive worker threads: ",
+    ngx_log(ngx_NOTICE, "[timer] alive worker threads: ",
             self.alive_threads_count)
 end
 
@@ -103,10 +103,10 @@ local function report_exit(self, thread)
     self.spawned_threads_count = self.spawned_threads_count - 1
     self.alive_threads_count = self.alive_threads_count - 1
 
-    ngx_log(ngx_NOTICE, "[timer-ng] thread ", thread.name, " exits")
-    ngx_log(ngx_NOTICE, "[timer-ng] spawned worker threads: ",
+    ngx_log(ngx_NOTICE, "[timer] thread ", thread.name, " exits")
+    ngx_log(ngx_NOTICE, "[timer] spawned worker threads: ",
             self.spawned_threads_count)
-    ngx_log(ngx_NOTICE, "[timer-ng] alive worker threads: ",
+    ngx_log(ngx_NOTICE, "[timer] alive worker threads: ",
             self.alive_threads_count)
 end
 
@@ -155,7 +155,7 @@ local function thread_before(context, self)
         wake_up_semaphore:wait(CONSTANTS_TOLERANCE_OF_GRACEFUL_SHUTDOWN)
 
     if not ok and err ~= "timeout" then
-        ngx_log(ngx_ERR, "[timer-ng] failed to wait semaphore: ", err)
+        ngx_log(ngx_ERR, "[timer] failed to wait semaphore: ", err)
     end
 
     return loop.ACTION_CONTINUE
diff --git a/lib/resty/timer-ng/utils.lua b/lib/resty/timer/utils.lua
similarity index 100%
rename from lib/resty/timer-ng/utils.lua
rename to lib/resty/timer/utils.lua
diff --git a/lib/resty/timer-ng/wheel/group.lua b/lib/resty/timer/wheel/group.lua
similarity index 95%
rename from lib/resty/timer-ng/wheel/group.lua
rename to lib/resty/timer/wheel/group.lua
index d3f2528..13e6359 100644
--- a/lib/resty/timer-ng/wheel/group.lua
+++ b/lib/resty/timer/wheel/group.lua
@@ -1,6 +1,6 @@
-local utils = require("resty.timer-ng.utils")
-local wheel = require("resty.timer-ng.wheel")
-local array = require("resty.timer-ng.array")
+local utils = require("resty.timer.utils")
+local wheel = require("resty.timer.wheel")
+local array = require("resty.timer.array")
 
 local array_merge = array.merge
 
@@ -16,7 +16,7 @@ local ipairs = ipairs
 local setmetatable = setmetatable
 
 local CONSTANTS_TOLERANCE_OF_GRACEFUL_SHUTDOWN =
-    require("resty.timer-ng.constants").TOLERANCE_OF_GRACEFUL_SHUTDOWN
+    require("resty.timer.constants").TOLERANCE_OF_GRACEFUL_SHUTDOWN
 
 local _M = {}
 
diff --git a/lib/resty/timer-ng/wheel/init.lua b/lib/resty/timer/wheel/init.lua
similarity index 98%
rename from lib/resty/timer-ng/wheel/init.lua
rename to lib/resty/timer/wheel/init.lua
index 633bc61..45d78c6 100644
--- a/lib/resty/timer-ng/wheel/init.lua
+++ b/lib/resty/timer/wheel/init.lua
@@ -1,4 +1,4 @@
-local array = require("resty.timer-ng.array")
+local array = require("resty.timer.array")
 
 local array_new = array.new
 
diff --git a/lua-resty-timer-ng-0.1.0-1.rockspec b/lua-resty-timer-ng-0.1.0-1.rockspec
deleted file mode 100644
index 6390a12..0000000
--- a/lua-resty-timer-ng-0.1.0-1.rockspec
+++ /dev/null
@@ -1,32 +0,0 @@
-package = "lua-resty-timer-ng"
-version = "0.1.0-1"
-source = {
-   url = "git://github.com/kong/lua-resty-timer-ng",
-   branch = "master"
-}
-description = {
-   summary = "A scalable timer library for OpenResty.",
-   license = "Apache 2.0",
-   homepage = "https://github.com/kong/lua-resty-timer"
-}
-dependencies = {
-
-}
-build = {
-   type = "builtin",
-   modules = {
-     ["resty.timer-ng"] = "lib/resty/timer-ng/init.lua",
-     ["resty.timer-ng.job"] = "lib/resty/timer-ng/job.lua",
-     ["resty.timer-ng.array"] = "lib/resty/timer-ng/array.lua",
-     ["resty.timer-ng.constants"] = "lib/resty/timer-ng/constants.lua",
-     ["resty.timer-ng.utils"] = "lib/resty/timer-ng/utils.lua",
-
-     ["resty.timer-ng.wheel"] = "lib/resty/timer-ng/wheel/init.lua",
-     ["resty.timer-ng.wheel.group"] = "lib/resty/timer-ng/wheel/group.lua",
-
-     ["resty.timer-ng.thread.group"] = "lib/resty/timer-ng/thread/group.lua",
-     ["resty.timer-ng.thread.loop"] = "lib/resty/timer-ng/thread/loop.lua",
-     ["resty.timer-ng.thread.super"] = "lib/resty/timer-ng/thread/super.lua",
-     ["resty.timer-ng.thread.worker"] = "lib/resty/timer-ng/thread/worker.lua",
-   }
-}
\ No newline at end of file
diff --git a/spec/01-new_spec.lua b/spec/01-new_spec.lua
index cf6ead1..e62cfc2 100644
--- a/spec/01-new_spec.lua
+++ b/spec/01-new_spec.lua
@@ -1,4 +1,4 @@
-local timer_module = require("resty.timer-ng")
+local timer_module = require("resty.timer")
 
 describe("new with | ", function ()
     it("empty options", function ()
diff --git a/spec/02-at_spec.lua b/spec/02-at_spec.lua
index 6d2698c..4eedd30 100644
--- a/spec/02-at_spec.lua
+++ b/spec/02-at_spec.lua
@@ -1,4 +1,4 @@
-local timer_module = require("resty.timer-ng")
+local timer_module = require("resty.timer")
 local helper = require("helper")
 
 local sleep = ngx.sleep
diff --git a/spec/03-every_spec.lua b/spec/03-every_spec.lua
index 5c87ad2..6935ef0 100644
--- a/spec/03-every_spec.lua
+++ b/spec/03-every_spec.lua
@@ -1,4 +1,4 @@
-local timer_module = require("resty.timer-ng")
+local timer_module = require("resty.timer")
 local helper = require("helper")
 
 local sleep = ngx.sleep
diff --git a/spec/04-timer-resume-pause-cancel_spec.lua b/spec/04-timer-resume-pause-cancel_spec.lua
index 74c4ac4..7442938 100644
--- a/spec/04-timer-resume-pause-cancel_spec.lua
+++ b/spec/04-timer-resume-pause-cancel_spec.lua
@@ -1,4 +1,4 @@
-local timer_module = require("resty.timer-ng")
+local timer_module = require("resty.timer")
 local helper = require("helper")
 
 local sleep = ngx.sleep
diff --git a/spec/05-sys-start-freeze_spec.lua b/spec/05-sys-start-freeze_spec.lua
index 806be93..24451b9 100644
--- a/spec/05-sys-start-freeze_spec.lua
+++ b/spec/05-sys-start-freeze_spec.lua
@@ -11,7 +11,7 @@ local TOLERANCE = 0.2
 
 
 insulate("system start -> freeze -> start | ", function ()
-    local timer_module = require("resty.timer-ng")
+    local timer_module = require("resty.timer")
     local timer = { }
     local callback
     local tbl
@@ -120,7 +120,7 @@ insulate("worker exiting | ", function ()
         end
         -- luacheck: pop
 
-        timer_module = require("resty.timer-ng")
+        timer_module = require("resty.timer")
     end)
 
     lazy_teardown(function ()
diff --git a/spec/06-stats_spec.lua b/spec/06-stats_spec.lua
index a48f6a3..618e814 100644
--- a/spec/06-stats_spec.lua
+++ b/spec/06-stats_spec.lua
@@ -1,4 +1,4 @@
-local timer_module = require("resty.timer-ng")
+local timer_module = require("resty.timer")
 local helper = require("helper")
 
 local sleep = ngx.sleep
diff --git a/spec/07-bugs_spec.lua b/spec/07-bugs_spec.lua
index 8348529..886dfce 100644
--- a/spec/07-bugs_spec.lua
+++ b/spec/07-bugs_spec.lua
@@ -1,4 +1,4 @@
-local timer_module = require("resty.timer-ng")
+local timer_module = require("resty.timer")
 local helper = require("helper")
 
 local sleep = ngx.sleep
diff --git a/spec/08-auto_scaling_spec.lua b/spec/08-auto_scaling_spec.lua
index 7deb17e..7d698c5 100644
--- a/spec/08-auto_scaling_spec.lua
+++ b/spec/08-auto_scaling_spec.lua
@@ -1,4 +1,4 @@
-local timer_module = require("resty.timer-ng")
+local timer_module = require("resty.timer")
 local helper = require("helper")
 
 local ngx_sleep = ngx.sleep
